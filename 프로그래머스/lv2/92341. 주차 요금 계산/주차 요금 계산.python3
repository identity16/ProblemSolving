import re
import math

def diffTime(h1, m1, h2, m2):
    return (h2 - h1) * 60 + (m2 - m1)

def calcFee(fees, acc_time):
    base_time, base_fee, unit_time, unit_fee = fees
    
    return base_fee + max(0, math.ceil((acc_time - base_time) / unit_time)) * unit_fee

def solution(fees, records):
    result_dict = {}
    
    for record in records:
        hours, minutes, car_num, in_out = re.split(':| ', record)
        
        hours = int(hours)
        minutes = int(minutes)
        is_out = in_out == "OUT"
        
        if car_num not in result_dict:
            result_dict[car_num] = {
                'acc_time': 0,
                'last_time': None,
                'is_out': False,
            }
        
        car_info = result_dict[car_num]
        
        if car_info["last_time"] != None and not car_info["is_out"]:
            car_info["acc_time"] += diffTime(car_info["last_time"][0], car_info["last_time"][1], hours, minutes)
        
        car_info["last_time"] = [hours, minutes]
        car_info["is_out"] = is_out
    
    answer = []
    for car_number in sorted(result_dict.keys()):
        car_info = result_dict[car_number]
        
        acc_time = car_info['acc_time']
        
        if not car_info['is_out']:
            hours, minutes = car_info['last_time']
            acc_time += diffTime(hours, minutes, 23, 59)
            
        answer.append(calcFee(fees, acc_time))
    
    return answer